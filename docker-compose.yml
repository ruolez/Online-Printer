version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: webapp_postgres
    environment:
      POSTGRES_DB: webapp
      POSTGRES_USER: webapp_user
      POSTGRES_PASSWORD: webapp_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U webapp_user -d webapp"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: webapp_backend
    environment:
      DATABASE_URL: postgresql://webapp_user:webapp_password@postgres:5432/webapp
      FLASK_APP: app.py
      FLASK_ENV: development
      SECRET_KEY: your-secret-key-change-in-production
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./backend:/app
      - uploads:/app/uploads
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: python app.py

  frontend:
    build: ./frontend
    container_name: webapp_frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true

  redis:
    image: redis:7-alpine
    container_name: webapp_redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: webapp_nginx
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  redis_data:
  uploads: